1. 자바 개발 도구
	(1) 컴파일러
		- JDK(Java Developer Kit) : 자바로 프로그램을 만듦
		- JRE(Java Runtime Environment) : 만들어진 걸 실행시키는 용도
		- v.17 (LTS : 장기 지원 서비스)
	(2) 환경변수 등록
	// java파일이 어느경로에 있던 상관없이 컴파일 하고 실행시키려고 환경변수 path에 아래 툴 경로를 지정
		- JAVA_HOME
		- PATH
		- 테스트
			javac -version
			java -version
2. Java 대표 기술
	(1) Java SE : 응용 프로그램(도스용, 윈도우용)
	(2) Java EE : 분산, Web, 안드로이드
	(3) Java ME : Embeded
	(4) FX, ...
3. 문자 인코딩
	- 명령 프롬프트
		chcp 65001 : UTF-8
		chcp 949 : 기본 한글 윈도우 방식
4. 변수와 데이터 타입
	(1) 데이터 타입
		1) 기본 데이터 타입(비객체 데이터 타입) // 한 개의 데이터만 저장
			- 정수형
				byte(1byte), short(2byte), int(4byte, default), long(8byte)
			- 실수형
				float(4byte), double(8byte, default)
			- 문자형
				char(2byte)
			- 논리형
				boolean : true, false
		2) 객체 데이터 타입
			- User Define
			- Built in
	(2) 변수
		1) 임시 기억 공간
		2) 반드시 선언 및 초기화
		3) 반드시 선언한 곳에서만 사용할 수 있다(유효 범위)
			- stack(임시적, 일시적) //LIFO 구조 <--> heap(장기적)
	(3) 연산자
		1) 강제 형변환 연산자(캐스팅 연산자)
			변수 = (데이터 타입)값;
			
	※ javac -d ../bin 클래스.java // 클래스.java의 클래스파일을 bin 폴더에 저장
	※ java -cp ../bin 클래스 // bin에 있는 클래스파일을 실행
5. Class - 1
	(1) 특징
		1) 묶음 : 변수(멤버변수, 인스턴스 변수, 속성, 필드), 함수(메서드, 멤버함수)
		2) 캡슐화 단위 : 최소 단위(원자성), 편리, 보안
		3) 설계도(추상적) -> 인스턴스(객체)
		4) 데이터 타입의 역할
		5) 객체 설계 5원칙 : SOLID
		6) 객체의 자격요건
			- 상속성(Inheritance)
			- 다형성(Polymorphism)
			// 상위 클래스 타입의 참조 변수를 통해서 하위 클래스의 객체를 참조할 수 있도록 허용하여 상위 클래스가 동일한 메시지로 하위 클래스들이 서로 다른 동작을 할 수 있도록 한다
			- 캡슐화(Incapsulation)
	(2) 변수의 종류
		1) 선언된 위치에 따른
			- 클래스 : 멤버변수, 인스턴스 변수, 필드
			- 메서드 : 변수(지역 변수)
		2) 저장되는 값에 따른
			- 값 : 변수(기본 데이터 타입으로 선언)
			- 주소 : 참조 변수(클래스로 선언)
	(3) 메서드
		1) 동작(기능)을 구현
		2) 작성 방법
			리턴타입  메서드명(...) {
				기능 구현
			}
		3) 호출 방식
			- 인자가 없는 방식
			- 인자가 있는 방식
				- Call By Value : 값에 의한 전달
				- Call By Reference : 참조에 의한 전달
			- 리턴값이 있는 방식
	(4) 메서드의 오버로딩 : 중복 정의
	(5) 생성자(Constructor)
		1) 인스턴스 생성
		2) 메서드명은 반드시 클래스명과 동일
		3) 리턴 타입이 없다
		4) 인스턴스를 생성할 때 단 한 번만 호출
		5) 모든 클래스는 기본 생성자(Default Constructor)를 갖는다
			만약, 다른 생성자를 만들 경우 더 이상 기본 생성자는 제공되지 않는다
		6) 초기화	
	(6) Garbage Collection
		1) JVM : 바이트 코드 파일(.class)을 해당 운영체제에서 실행 가능한 기계어로 번역해서 실행
		2) System.gc()
		3) finalize()
	(7) this
		1) 현재 실행 중인 인스턴스의 주소를 저장하는 참조 변수
		2) read only
		3) this()
6. ANT
	(1) 자바 언어를 사용하여 필요한 일련화된 과정을 자동화하는 소프트웨어 빌드 도구
	(2) Ant > Maven > Gradle
	(3) 설치
		1) https://projects.apache.org/
		2) apache-ant-1.10.14-bin.zip
		3) 환경변수 등록 : ANT_HOME, Path
	(4) 테스트
		ant
		ant -version
	(5) 사용법
		1) build.xml 파일 생성
			- work03 폴더에 생성
			<project>
				<target>
					<task .../>
				</target>
			</project>
		2) build.xml이 있는 위치에서 ant 프로그램 실행
7. 배열
(1) 같은 이름으로 정의된 연속적인 공간