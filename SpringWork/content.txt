1. 정의 : 엔터프라이즈 어플리케이션에서 필요로 하는 기능을 제공하는 프레임워크
2. 특징
	(1) EJB -> Spring
	(2) IoC(Inversion of Control) 컨테이너
		1) DI 패턴 지원
		2) AOP 패턴 지원
	(3) 전자정부 프레임워크
3. https://spring.io
	https://docs.spring.io/spring-framework/docs/5.3.30/reference/html/
	https://docs.spring.io/spring-framework/docs/5.3.30/javadoc-api/
4. 객체 지향 설계 원칙(SOLID)
	(1) SRP(Single Responsibility)
	(2) OCP(Open Close)
	(3) LSP
	(4) ISP
	(5) DIP (Dependency Injection)
5. 프로젝트 생성 방법
(1) Maven
	https://dlcdn.apache.org/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.zip
	
	다운로드 후 환경 변수 설정
		M2_HOME
		path - bin 파일
	
	DOS 창에서 mvn --version
	
	pom.xml이 있는 폴더에서 
		mvn compile (다운로드)
	
		mvn package (압축)
		
	응용 프로젝트 생성
	mvn archetype:generate
	-DgroupId=[생성할 프로젝트의 group id]
	-DartifactId=[생성할 프로젝트의 artifact id]
	-DarchetypeArtifactId=maven-archytype-quickstart
	
	mvn archetype:generate -DgroupId=com.netsong7 -DartifactId=HelloWorld2 -DarchetypeArtifactId=maven-archetype-quickstart
		archetype:generate : goal, 프로젝트 자체를 maven 너가 만들어줘라
		groupId : 
		artifactId : 프로젝트 이름
		
	이클립스에서 create maven 후 카탈로그를 internal로
		그리고 artifact id를 quickstart나 webapp로
(2) Gradle

6. DI 패턴
	(1) 의존성 주입 방법
		- Constructor Argument Resolution
		- Setter-based Dependency Injection
7. 빈 생성 방법
	(1) XML
		1) <bean>
		2) 전용 태그
			<context
			<aop
			<..
	(2) 어노테이션 : 자동 인식
		1) 빈 스캐닝(bean scanning)
			특정 어노테이션이 붙은 클래스를 자동으로 찾아서 빈으로 등록해주는 방식
		2) 빈 스캐너
			빈 스캐닝 작업을 담당하는 오브젝트
			디폴트 필터 : @Component
	(3) 자바코드에 의한 빈 등록
		1) @Configuration, @Bean
		2) @Bean
8. DI 방법
	(1) XML
		<property>, <constructor-arg>
	(2) 자동 와이어링 방식
		1) XML
			- byName, byType
		2) 어노테이션
			- @Resource
				빈의 이름으로 연결
				JSR-250
				필드에서 사용 가능
				프로퍼티에만 사용
			- @Autowired
				빈의 타입으로 연결
				스프링 2.5 이후에 추가
				생성자, 일반 메서드에서도 사용 가능
9. JdbcTemplate
	(1) update() : insert, updqte, delete
	(2) query() : select
		1) RowMapper
		2) ResultSetExtractor
	(3) ? 값 전달
		1) PreparedStatementCreator
		2) Object[]
		3) PreparedStatementSetter
10. DBCP
	(1) C3P0
		- http://www.mchange.com/projects/c3p0/index.html
	(2) Apache Commons
		- http://commons.apache.org/dbcp/configuration.html
	(3) Hikari
		- https://github.com/brettwooldridge/HikariCP